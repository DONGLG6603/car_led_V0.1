C51 COMPILER V9.00   TEST                                                                  11/04/2016 21:11:01 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TEST
OBJECT MODULE PLACED IN test.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE test.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*NEC协议红外通信
   2          */
   3          #include <reg52.h>
   4          #include <intrins.h>
   5          /*====================================
   6           自定义类型名
   7          ====================================*/
   8          typedef unsigned char INT8U;
   9          typedef unsigned char uchar;
  10          
  11          typedef unsigned int INT16U;
  12          typedef unsigned int uint;
  13          
  14          
  15          uchar IRtime;     //储存检测红外高低电平持续时间
  16          uchar IRcord[4];  //储存解码后的4个字节数据
  17          uchar IRdata[33]; //包含起始码在内的33位数据
  18          bit IRpro_ok;     //解码后4个字节数据接收完成标志位
  19          bit IRok;                 //33位数据接收完成标志
  20          
  21          
  22          sbit LED1 = P1^0;
  23          sbit LED2 =     P1^1;
  24          sbit LED3 = P1^2;
  25          sbit LED4 =     P1^3;
  26          sbit LED5 = P1^4;
  27          sbit LED6 =     P1^5;
  28          sbit LED7 = P1^6;
  29          sbit LED8 =     P1^7;
  30          //初始化定时器0，外部中断0，串口
  31          
  32          void delay(uint z)//延时函数
  33          {
  34   1              uint x,y;
  35   1              for(x=z;x>0;x--)
  36   1                      for(y=114;y>0;y--);
  37   1      }
  38          
  39          void init()
  40          {
  41   1              TMOD |= 0x02;//设置定时器0工作模式2,8位自动重装
  42   1              TL0 = TH0 = 0;//初始化定时器0寄存器，定时器0溢出一次时间为256个机器周期
  43   1              EA = 1;//开总中断
  44   1              ET0 = 1;//开定时器0中断
  45   1              TR0 = 1;//启动定时器0
  46   1      
  47   1              IT0 = 1;//设置外部下降沿触发方式
  48   1              EX0 = 1;//开外部中断0中断
  49   1      }
  50          
  51          //定时器0中断，每中断一次需要256*1.085us =  277.76us
  52          void time0() interrupt 1
  53          {
  54   1              IRtime++;//277.76us
  55   1      }
C51 COMPILER V9.00   TEST                                                                  11/04/2016 21:11:01 PAGE 2   

  56          
  57          //外部中断0 存入33次脉宽
  58          void int0() interrupt 0
  59          {
  60   1              static uchar i;//静态变量用于存入33次数据计数
  61   1              uint startflag;//开始储存脉宽标志位
  62   1              if(startflag)
  63   1              {
  64   2                      /*判断引导码，如果是引导码则从起始码开始存*/
  65   2                      if((IRtime < 53) && (IRtime >= 32))     i = 0;
  66   2                      IRdata[i] = IRtime;//以TO溢出的次数来计算脉宽把这个时间存放在数组中
  67   2                      IRtime = 0;//计数清零
  68   2                      i++;//计数脉宽存入次数自加
  69   2                      if(i == 33)        //i等于33那么就表示已经存入了33次脉宽
  70   2                      {
  71   3                              IRok = 1; //脉宽检查完成
  72   3                              i = 0;    //把脉宽计数清零准备下次存入
  73   3                      }
  74   2              }
  75   1              else
  76   1              {
  77   2                      IRtime = 0;       //定时器0计数清零
  78   2                      startflag = 1;//开始处理标志位置1
  79   2              }
  80   1      
  81   1      }
  82          
  83          //把提取的33次脉宽进行解码 NEC协议
  84          void IRcordpro()
  85          {
  86   1              uchar i;//i是用于计数处理4个字节
  87   1              uchar j;//j用于计数处理1个字节的8位数据
  88   1              uchar k;//k用于计数处理33次脉宽
  89   1              k = 1;//从第一位脉宽开始处理，丢掉起始码
  90   1              for(i = 0; i < 4; i++)
  91   1              {
  92   2                      for(j = 0; j < 8; j++)
  93   2                      {
  94   3                              //如果脉宽大于数据0标准的1125us那么就判定为数据1
  95   3                              if(IRdata[k] > 5) IRcord[i] |= 0x80;//写1
  96   3                              //只能右移7次，如果右移8次则会把第一位数据移出去
  97   3                              if(j < 7) IRcord[i] >>= 1;
  98   3                              k++; //处理下一次脉宽
  99   3                      }
 100   2              }
 101   1              IRpro_ok = 1;//解码完成
 102   1      }
 103          
 104          
 105          void LED2k()//LED2灯控制程序 频闪灯
 106          {       
 107   1              if(IRcord[2] == 0x18)
 108   1              {
 109   2                                      init(); 
 110   2                                      while(1)
 111   2                                      {       
 112   3                                              uint i;
 113   3                                              uint j;
 114   3                                              if(LED6 == 0)
 115   3                                              {LED6 = 0;LED2 = 0;delay(500);LED6 = 1;LED2 = 1;delay(500);j++;}
 116   3                                              if(LED6 == 1 & j ==0)
 117   3                                              {LED2 = 0;LED6 = 1;delay(500);LED2 = 1;LED6 = 1;delay(500);}
C51 COMPILER V9.00   TEST                                                                  11/04/2016 21:11:01 PAGE 3   

 118   3                                              if(j == 1)
 119   3                                              {LED2 = 0;LED6 = 0;delay(500);LED2 = 1;LED6 = 1;delay(500);}
 120   3                                              
 121   3                                              if(IRok)//判断33次脉宽是否提取完成
 122   3                                              {
 123   4                                                      IRcordpro();//根据脉宽解码出4个字节的数据
 124   4                                                      switch(IRcord[2])//判断第三个数码值
 125   4                                               {
 126   5                                                       case 0x0c:LED1 = ~LED1;;break;//1 显示相应的按键值
 127   5                                                       case 0x18:i = 1;break;//2
 128   5                                                       case 0x5e:LED3 = ~LED3;break;//3
 129   5                                                       case 0x08:LED4 = ~LED4;break;//4
 130   5                                                       case 0x1c:LED5 = ~LED5;break;//5
 131   5                                                       case 0x5a:LED6 = ~LED6;break;//6
 132   5                                                       case 0x42:LED7 = ~LED7;break;//7
 133   5                                                       case 0x52:LED8 = ~LED8;break;//8
 134   5                                                       case 0x4a:P1= 0xff;break;//9
 135   5                                           default:P1 = 0x00;break;
 136   5                                                       }
 137   4                              
 138   4                                                       IRpro_ok=0;//处理完成标志
 139   4                                                       IRok = 0;//清零脉宽检查完成标志位等待下一次脉宽检查
 140   4                                              }
 141   3                                              if(i == 1)
 142   3                                              {
 143   4                                                      LED2 = 1;
 144   4                                                      i = 0;
 145   4                                                      j = 0;
 146   4                                                      break;  
 147   4                                              }
 148   3                                      }
 149   2                                      return;
 150   2              }
 151   1              else if(IRcord[2] == 0x5a)
 152   1              {
 153   2                      init(); 
 154   2                                      while(1)
 155   2                                      {       
 156   3                                              uint i;
 157   3                                              uint j;
 158   3                                              if(LED2 == 0)
 159   3                                              {LED6 = 0;LED2 = 0;delay(500);LED6 = 1;LED2 = 1;delay(500);j++;}
 160   3                                              if(LED2 == 1 & j ==0)
 161   3                                              {LED6 = 0;LED2 = 1;delay(500);LED6 = 1;LED2 = 1;delay(500);}
 162   3                                              if(j == 1)
 163   3                                              {LED6 = 0;LED2 = 0;delay(500);LED6 = 1;LED2 = 1;delay(500);}
 164   3                                              
 165   3                                              if(IRok)//判断33次脉宽是否提取完成
 166   3                                              {
 167   4                                                      IRcordpro();//根据脉宽解码出4个字节的数据
 168   4                                                      switch(IRcord[2])//判断第三个数码值
 169   4                                               {
 170   5                                                       case 0x0c:LED1 = ~LED1;;break;//1 显示相应的按键值
 171   5                                                       case 0x18:LED2 = ~LED2;break;//2
 172   5                                                       case 0x5e:LED3 = ~LED3;break;//3
 173   5                                                       case 0x08:LED4 = ~LED4;break;//4
 174   5                                                       case 0x1c:LED5 = ~LED5;break;//5
 175   5                                                       case 0x5a:i = 1;break;//6
 176   5                                                       case 0x42:LED7 = ~LED7;break;//7
 177   5                                                       case 0x52:LED8 = ~LED8;break;//8
 178   5                                                       case 0x4a:P1= 0xff;break;//9
 179   5                                           default:P1 = 0x00;break;
C51 COMPILER V9.00   TEST                                                                  11/04/2016 21:11:01 PAGE 4   

 180   5                                                       }
 181   4                              
 182   4                                                       IRpro_ok=0;//处理完成标志
 183   4                                                       IRok = 0;//清零脉宽检查完成标志位等待下一次脉宽检查
 184   4                                              }
 185   3                                              if(i == 1)
 186   3                                              {
 187   4                                                      LED6 = 1;
 188   4                                                      i = 0;
 189   4                                                      j = 0;
 190   4                                                      break;  
 191   4                                              }
 192   3                                      }
 193   2                                      return; 
 194   2              }                       
 195   1      }
 196          
 197          void Ir_work(void)//红外键值散转程序
 198          {
 199   1             switch(IRcord[2])//判断第三个数码值
 200   1                       {
 201   2                               case 0x0c:LED1 = ~LED1;;break;//1 显示相应的按键值
 202   2                               case 0x18:LED2k();break;//2
 203   2                               case 0x5e:LED3 = ~LED3;break;//3
 204   2                               case 0x08:LED4 = ~LED4;break;//4
 205   2                               case 0x1c:LED5 = ~LED5;break;//5
 206   2                               case 0x5a:LED2k();break;//6
 207   2                               case 0x42:LED7 = ~LED7;break;//7
 208   2                               case 0x52:LED8 = ~LED8;break;//8
 209   2                               case 0x4a:P1= 0xff;break;//9
 210   2                   default:P1 = 0x00;break;
 211   2                               }
 212   1      
 213   1                        IRpro_ok=0;//处理完成标志
 214   1      
 215   1      }
 216          
 217          void main()
 218          {
 219   1              init();//初始化
 220   1              while(1)
 221   1              {
 222   2                      if(IRok)//判断33次脉宽是否提取完成
 223   2                      {
 224   3                              IRok = 0;//清零脉宽检查完成标志位等待下一次脉宽检查
 225   3                              IRcordpro();//根据脉宽解码出4个字节的数据
 226   3                              Ir_work();
 227   3                      }
 228   2              }
 229   1      
 230   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    665    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     39       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.00   TEST                                                                  11/04/2016 21:11:01 PAGE 5   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
